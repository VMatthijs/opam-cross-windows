opam-version: "2.0"
maintainer: "whitequark <whitequark@whitequark.org>"
authors: [ "whitequark <whitequark@whitequark.org>" ]
license: "MIT"
homepage: "https://github.com/whitequark/ppx_deriving"
doc: "https://whitequark.github.io/ppx_deriving"
bug-reports: "https://github.com/whitequark/ppx_deriving/issues"
dev-repo: "https://github.com/whitequark/ppx_deriving.git"
tags: [ "syntax" ]
substs: [ "pkg/META" ]
build: [
  [# If there is no native dynlink, we can't use native builds
   "ocaml" "pkg/build.ml" "native=%{ocaml-native-dynlink}%"
                          "native-dynlink=%{ocaml-native-dynlink}%"]
  ["sh" "-c" "rm _build/src/ppx_deriving_runtime*"]
  ["env" "OCAMLFIND_TOOLCHAIN=windows"
   "ocamlbuild" "-classic-display" "-use-ocamlfind" "src/ppx_deriving_runtime.cmxs" "src/ppx_deriving_runtime.cma"]
]
build-test: [
  "ocamlbuild" "-classic-display" "-use-ocamlfind" "src_test/test_ppx_deriving.byte" "--"
]
build-doc: [
  make "doc"
]
install: [
  "env" "OCAMLFIND_TOOLCHAIN=windows"
  make "install"
]
depends: [
  "ocamlbuild" {build}
  "ocamlfind"  {build & >= "1.6.0"}
  "cppo"       {build}
  "cppo_ocamlbuild" {build}
  "ocaml-migrate-parsetree"
  "ocaml-migrate-parsetree-windows"
  "ppx_derivers"
  "ppx_tools-windows"  {>= "4.02.3"}
  "result"
  "result-windows"
  "ounit"      {test}
  "ocaml-windows"
]
available: [ ocaml-version > "4.03.0" & opam-version >= "1.2" ]